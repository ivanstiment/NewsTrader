# Docs for the Azure Web Apps Deploy action: https://github.com/Azure/webapps-deploy
# More GitHub Actions for Azure: https://github.com/Azure/actions
# More info on Python, GitHub Actions, and Azure App Service: https://aka.ms/python-webapps-actions

name: Build and deploy Python app to Azure Web App - news-trader-django-azure-app-backend

env:
  WEBSITE_HOSTNAME: news-trader-django-azure-app-backend-aggfgbhrbyasaucd.spaincentral-01.azurewebsites.net
  DJANGO_SECRET_KEY: ${{ secrets.DJANGO_SECRET_KEY }}
  DBUSER: ${{ secrets.DBUSER }}
  DBPASS: ${{ secrets.DBPASS }}
  DBNAME: ${{ secrets.DBNAME }}
  DBHOST: ${{ secrets.DBHOST }}
  CELERY_RESULT_BACKEND: ${{ secrets.CELERY_RESULT_BACKEND }}
  CELERY_BROKER_URL: ${{ secrets.CELERY_BROKER_URL }}
  DEBUG: False

on:
  push:
    branches:
      - news-trader-django-azure-web-app
  workflow_dispatch:

jobs:
  build:
    runs-on: ubuntu-latest
    permissions:
      contents: read

    steps:
      - uses: actions/checkout@v4

      - name: Set up Python version
        uses: actions/setup-python@v5
        with:
          python-version: "3.13.3"

      # - name: Create and start virtual environment
      #   run: |
      #     python -m venv antenv
      #     source antenv/bin/activate

      - name: Install dependencies
        run: |
          python -m pip install --upgrade pip
          pip install -r requirements.txt

      - name: Crear directorio STATIC_ROOT si no existe
        run: mkdir -p ${{ github.workspace }}/staticfiles

      - name: Crear directorio STATIC si no existe
        run: mkdir -p ${{ github.workspace }}/static

      # - name: Verificar existencia de static
      #   run: |
      #     ls -l ${{ github.workspace }}/static

      - name: Collect static files
        run: python manage.py collectstatic --no-input

      # Optional: Add step to run tests here (PyTest, Django test suites, etc.)

      - name: Zip artifact for deployment excluding unnecessary folders
        run: zip -r release.zip . -x "*.venv*" "*.git*" "*__pycache__*"

      - name: Upload artifact for deployment jobs
        uses: actions/upload-artifact@v4
        with:
          name: python-app
          path: |
            release.zip

  deploy:
    runs-on: ubuntu-latest
    needs: build
    environment:
      name: "Production"
      url: ${{ steps.deploy-to-webapp.outputs.webapp-url }}

    steps:
      - name: Download artifact from build job
        uses: actions/download-artifact@v4
        with:
          name: python-app

      - name: Unzip artifact for deployment
        run: unzip release.zip

      - name: "Deploy to Azure Web App"
        uses: azure/webapps-deploy@v3
        id: deploy-to-webapp
        with:
          app-name: "news-trader-django-azure-app-backend"
          slot-name: "Production"
          publish-profile: ${{ secrets.AZUREAPPSERVICE_PUBLISHPROFILE_BC4BA36656BF4F048A4F89E646E56639 }}
