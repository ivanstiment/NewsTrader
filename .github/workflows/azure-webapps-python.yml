# This workflow will build and push a Python application to an Azure Web App when a commit is pushed to your default branch.
#
# This workflow assumes you have already created the target Azure App Service web app.
# For instructions see https://docs.microsoft.com/en-us/azure/app-service/quickstart-python?tabs=bash&pivots=python-framework-flask
#
# To configure this workflow:
#
# 1. Download the Publish Profile for your Azure Web App. You can download this file from the Overview page of your Web App in the Azure Portal.
#    For more information: https://docs.microsoft.com/en-us/azure/app-service/deploy-github-actions?tabs=applevel#generate-deployment-credentials
#
# 2. Create a secret in your repository named AZURE_WEBAPP_PUBLISH_PROFILE, paste the publish profile contents as the value of the secret.
#    For instructions on obtaining the publish profile see: https://docs.microsoft.com/azure/app-service/deploy-github-actions#configure-the-github-secret
#
# 3. Change the value for the AZURE_WEBAPP_NAME. Optionally, change the PYTHON_VERSION environment variables below.
#
# For more information on GitHub Actions for Azure: https://github.com/Azure/Actions
# For more information on the Azure Web Apps Deploy action: https://github.com/Azure/webapps-deploy
# For more samples to get started with GitHub Action workflows to deploy to Azure: https://github.com/Azure/actions-workflow-samples

name: Build and deploy Python app to Azure Web App

env:
  AZURE_WEBAPP_NAME: newstrader
  PYTHON_VERSION: "3.11"
  FRONTEND_PATH: client

on:
  push:
    branches: ["main"]
  workflow_dispatch:

permissions:
  contents: read

jobs:
  build:
    runs-on: ubuntu-latest

    steps:
      - uses: actions/checkout@v4

      # Setup Python
      - name: Set up Python ${{ env.PYTHON_VERSION }}
        uses: actions/setup-python@v4
        with:
          python-version: ${{ env.PYTHON_VERSION }}

      # Install backend dependencies
      - name: Install Python dependencies
        env:
          DJANGO_SECRET_KEY: ${{ secrets.DJANGO_SECRET_KEY }}
        run: |
          python -m pip install --upgrade pip
          pip install -r requirements.txt

      - uses: actions/setup-node@v3
        with:
          node-version: '20.15.0'
      
      # - name: Build React front-end
      #   run: |
      #     cd ${{ env.FRONTEND_PATH }}
      #     npm install
      #     npm run build
      #   env:
      #     CI: false

      # Upload artifact for deployment, excluding venv and node_modules
      - name: Upload artifact
        uses: actions/upload-artifact@v4
        with:
          name: app-package
          path: |
            .
            !**/node_modules/
            !antenv/
            !venv/
            !.env
            !**/__pycache__/

  deploy:
    needs: build
    runs-on: ubuntu-latest
    permissions:
      contents: none
    environment:
      name: Development

    steps:
      - name: Download artifact
        uses: actions/download-artifact@v4
        with:
          name: app-package
          path: .

      - name: Azure Login
        uses: azure/login@v1
        with:
          creds: ${{ secrets.AZURE_CREDENTIALS }}

      # Set application settings including environment variables
      - name: Configure app settings in Azure
        uses: azure/cli@v1
        with:
          inlineScript: |
            az webapp config appsettings set \
              --name ${{ env.AZURE_WEBAPP_NAME }} \
              --resource-group newstrader_group \
              --settings \
                SCM_DO_BUILD_DURING_DEPLOYMENT=true \
                DJANGO_ENV=production \
                WEBSITES_PORT=8000 \
                DISABLE_COLLECTSTATIC=false \
                POST_BUILD_COMMAND="python manage.py migrate"

      # Enable logging and tail logs
      - name: Enable Azure logging
        uses: azure/cli@v1
        with:
          inlineScript: |
            az webapp log config \
              --resource-group newstrader_group \
              --name ${{ env.AZURE_WEBAPP_NAME }} \
              --application-logging filesystem \
              --detailed-error-messages true \
              --failed-request-tracing true \
              --web-server-logging filesystem

            timeout 3m az webapp log tail \
              --resource-group newstrader_group \
              --name ${{ env.AZURE_WEBAPP_NAME }}

      - name: Deploy to Azure Web App
        id: deploy-to-webapp
        uses: azure/webapps-deploy@v2
        with:
          app-name: ${{ env.AZURE_WEBAPP_NAME }}
          publish-profile: ${{ secrets.AZURE_WEBAPP_PUBLISH_PROFILE }}
