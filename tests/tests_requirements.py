"""
M√≥dulo de Pruebas de Dependencias Ampliado

Este archivo contiene pruebas automatizadas para asegurar que todas las
librer√≠as requeridas por el proyecto est√©n correctamente instaladas y
funcionan en su forma b√°sica.
"""

import importlib

# Lista de paquetes a probar junto con una prueba b√°sica por paquete
DEPENDENCIES = {
    "asgiref": lambda: importlib.import_module("asgiref") and print("‚úÖ asgiref importado"),
    "beautifulsoup4": lambda: importlib.import_module("bs4") and print("‚úÖ beautifulsoup4 importado"),
    "blinker": lambda: importlib.import_module("blinker") and print("‚úÖ blinker importado"),
    "certifi": lambda: importlib.import_module("certifi") and print("‚úÖ certifi importado"),
    "charset-normalizer": lambda: importlib.import_module("charset_normalizer") and print("‚úÖ charset-normalizer importado"),
    "click": lambda: importlib.import_module("click") and print("‚úÖ click importado"),
    "colorama": lambda: importlib.import_module("colorama") and print("‚úÖ colorama importado"),
    "Django": lambda: importlib.import_module("django") and print("‚úÖ Django importado"),
    "django-cors-headers": lambda: importlib.import_module("corsheaders") and print("‚úÖ django-cors-headers importado"),
    "django-environ": lambda: importlib.import_module("environ") and print("‚úÖ django-environ importado"),
    "django_celery_results": lambda: importlib.import_module("django_celery_results") and print("‚úÖ django_celery_results importado"),
    "djangorestframework": lambda: importlib.import_module("rest_framework") and print("‚úÖ djangorestframework importado"),
    "djangorestframework_simplejwt": lambda: importlib.import_module("rest_framework_simplejwt") and print("‚úÖ simplejwt importado"),
    "et_xmlfile": lambda: importlib.import_module("et_xmlfile") and print("‚úÖ et_xmlfile importado"),
    "Flask": lambda: importlib.import_module("flask") and print("‚úÖ Flask importado"),
    "frozendict": lambda: importlib.import_module("frozendict") and print("‚úÖ frozendict importado"),
    "idna": lambda: importlib.import_module("idna") and print("‚úÖ idna importado"),
    "itsdangerous": lambda: importlib.import_module("itsdangerous") and print("‚úÖ itsdangerous importado"),
    "Jinja2": lambda: importlib.import_module("jinja2") and print("‚úÖ Jinja2 importado"),
    "joblib": lambda: importlib.import_module("joblib") and print("‚úÖ joblib importado"),
    "MarkupSafe": lambda: importlib.import_module("markupsafe") and print("‚úÖ MarkupSafe importado"),
    "multitasking": lambda: importlib.import_module("multitasking") and print("‚úÖ multitasking importado"),
    "nltk": lambda: importlib.import_module("nltk") and print("‚úÖ nltk importado"),
    "numpy": lambda: importlib.import_module("numpy") and print("‚úÖ numpy importado"),
    "openpyxl": lambda: importlib.import_module("openpyxl") and print("‚úÖ openpyxl importado"),
    "pandas": lambda: importlib.import_module("pandas") and print("‚úÖ pandas importado"),
    "peewee": lambda: importlib.import_module("peewee") and print("‚úÖ peewee importado"),
    "platformdirs": lambda: importlib.import_module("platformdirs") and print("‚úÖ platformdirs importado"),
    "python-dateutil": lambda: importlib.import_module("dateutil") and print("‚úÖ python-dateutil importado"),
    "pytz": lambda: importlib.import_module("pytz") and print("‚úÖ pytz importado"),
    "regex": lambda: importlib.import_module("regex") and print("‚úÖ regex importado"),
    "requests": lambda: importlib.import_module("requests") and print("‚úÖ requests importado"),
    "setuptools": lambda: importlib.import_module("setuptools") and print("‚úÖ setuptools importado"),
    "six": lambda: importlib.import_module("six") and print("‚úÖ six importado"),
    "soupsieve": lambda: importlib.import_module("soupsieve") and print("‚úÖ soupsieve importado"),
    "sqlparse": lambda: importlib.import_module("sqlparse") and print("‚úÖ sqlparse importado"),
    "tqdm": lambda: importlib.import_module("tqdm") and print("‚úÖ tqdm importado"),
    "typing_extensions": lambda: importlib.import_module("typing_extensions") and print("‚úÖ typing_extensions importado"),
    "tzdata": lambda: importlib.import_module("tzdata") and print("‚úÖ tzdata importado"),
    "urllib3": lambda: importlib.import_module("urllib3") and print("‚úÖ urllib3 importado"),
    "vaderSentiment": lambda: importlib.import_module("vaderSentiment") and print("‚úÖ vaderSentiment importado"),
    "Werkzeug": lambda: importlib.import_module("werkzeug") and print("‚úÖ Werkzeug importado"),
    "yfinance": lambda: importlib.import_module("yfinance") and print("‚úÖ yfinance importado"),
    "transformers": lambda: importlib.import_module("transformers") and print("‚úÖ transformers importado"),
    "torch": lambda: importlib.import_module("torch") and print("‚úÖ torch importado"),
    "celery": lambda: importlib.import_module("celery") and print("‚úÖ celery importado"),
    "redis": lambda: importlib.import_module("redis") and print("‚úÖ redis importado"),
    "gunicorn": lambda: importlib.import_module("gunicorn") and print("‚úÖ gunicorn importado"),
}

def run_dependency_tests():
    print("\nüîç Iniciando pruebas de dependencias...\n")
    for name, test_func in DEPENDENCIES.items():
        try:
            test_func()
        except Exception as e:
            print(f"‚ùå Error en {name}: {e}")

if __name__ == "__main__":
    run_dependency_tests()
